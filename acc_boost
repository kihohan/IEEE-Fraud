params = {'learning_rate': 0.05, 
          'max_depth': 13, 
          'boosting': 'gbdt', 
          'objective': ['binary : logistic'], 
          'application': 'binary',
          'metric': 'auc', 
          'is_training_metric': True, 
          'num_leaves': 512, 
          'feature_fraction': 0.9, 
          'bagging_fraction': 0.7, 
          'bagging_freq': 5, 
          "subsample_freq": 5,
          "subsample": 0.9,
          'seed':13,
          'device': 'cpu'}
model = lgb.train(params, train_ds, 1000, test_ds, verbose_eval = 1000,
                  early_stopping_rounds = 100)
predicted = model.predict(Test_X)

predictions = [round(value) for value in predicted]
# evaluate predictions
accuracy = accuracy_score(Test_Y, predictions)
print("Accuracy: %.2f%%" % (accuracy * 100.0))
